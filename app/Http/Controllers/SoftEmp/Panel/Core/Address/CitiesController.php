<?php

namespace App\Http\Controllers\SoftEmp\Panel\Core\Address;

use App\Http\Validators\Address\CityValidator;
use App\Models\Core\Address\City;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Gate;
use App\Http\Controllers\SoftEmp\CrudController;
use App\Models\Core\Address\State;

class CitiesController extends CrudController {

    /**
     * path file views
     *
     * @var type
     */
    protected $nameView = 'softemp.panel.address.cities';

    /**
     * route basic
     *
     * @var type
     */
    protected $route = 'panel.address.cities';

    private $state;

    /**
     * CitiesController constructor.
     * @param City $model
     * @param Request $request
     * @param CityValidator $validator
     * @param State $state
     */
    public function __construct(City $model, Request $request, CityValidator $validator, State $state) {
        $this->model = $model;
        $this->request = $request;
        $this->validator = $validator;
        $this->state = $state;
    }

    public function getCity(){
        $data = [];
        if($this->request->has('state')&&$this->request->has('city')){
            $state_id = $this->request->state;
            $search = $this->request->city;
            $data = $this->model->select("id","name")
                ->whereStateId($state_id)
                ->where('name','LIKE',"%$search%")
                ->get();
            if (count($data)) {
                return response()->json($data);
            }
        }
        $data = [
            0=>[
                'id'=>'new',
                'name'=>'Cidade nÃ£o encontrada'
            ],
        ];
        return response()->json($data,200);
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        //verifica se existe a permission
        if (Gate::denies('address.city-view')) {
            return redirect()->back()->with('error', trans('grud.msg_permission_denied'));
        }

        return parent::index();
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //verifica se existe a permission
        if (Gate::denies('city-create')) {
            return redirect()->back()->with('error', trans('grud.msg_permission_denied'));
        }
        //pegando os Estados
        $states = $this->state->all();

        return view("{$this->nameView}.create", compact('states'));
    }

    public function store()
    {
        return parent::store(); // TODO: Change the autogenerated stub
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $data = $this->model->find($id);
        $states = $this->state->all();

        return view("{$this->nameView}.edit", compact('data','states'));
    }
}
